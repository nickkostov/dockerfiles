version: 2.1

master_only: &master_only
  filters:
    branches:
      only: master

# PARAMETERS
parameters:
  trigger-alpine:
    type: boolean
    default: false
  trigger-centos:
    type: boolean
    default: false
  trigger-debian:
    type: boolean
    default: false
  trigger-ubuntu:
    type: boolean
    default: false
  alpine-path:
    type: string
    default: /root/project/os/alpine
  centos-path:
    type: string
    default: /root/project/os/centos
  debian-path:
    type: string
    default: /root/project/os/debian
  ubuntu-path:
    type: string
    default: /root/project/os/ubuntu

executors:
  docker-publisher:
    environment:
      URI: url
      IMAGE_TAG: latest
    docker:
      - image: docker:stable # docker:19.03.12 # Image must be having Docker in Docker in order to build all

commands:
  docker-build:
    parameters:
      version:
        default: "latest"
        type: string
      path:
        default: "/os/alpine"
        type: string
      image_os:
        default: "alpine"
        type: string
    steps:
      - run: 
          name: Check current PATH and list contents
          command: |
            pwd && ls -lah

      - run:
          name: Build Docker Image
          command: | 
            docker build -t alpine:<<parameters.version>>  -f <<parameters.path>>/Dockerfile
      - run:
          name: Tag Docker Image
          command: |
            docker tag alpine:<<parameters.version>> docker.pkg.github.com/nickkostov/Dockerfiles/<<parameters.image_os>>:latest

#  docker-push:
#    steps:

jobs:
  docker-build-alpine:
    executor: docker-publisher
#    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - docker-build
      #- run:
      #    name: Build Docker image
      #    command: docker build --tag "${IMAGE_TAG}" .
      #- run:
      #    name: Archive Docker image
      #    command: docker save --output image.tar "${IMAGE_TAG}"
      #- persist_to_workspace:
      #    root: .
      #    paths:
      #      - ./image.tar
#  push:
#    executor: docker-publisher
#    steps:
#      - setup_remote_docker
#      - attach_workspace:
#          at: /tmp/workspace
#      - run:
#          name: Load Docker image
#          command: docker load --input /tmp/workspace/image.tar
#      - run:
#          name: Publish Docker image
#          command: |
#            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
#            docker push "${IMAGE_TAG}"
# WORKFLOWS
workflows:
  build-alpine:
    when: 
      or: 
        - << pipeline.parameters.trigger-alpine >>
    jobs:
      - docker-build-alpine:
          <<: *master_only
          #steps:
          #  - checkout
          #  - build

#      - deploy-approval:
#          <<: *master_only
#          name: 'Approval Gate For Alpine'
#          type: approval
#          requires:
#            - docker-build-alpine

#  build-centos:
#    when: 
#      or: 
#        - << pipeline.parameters.trigger-centos >>
#    jobs:
#      - docker-build-centos:
#          <<: *master_only
# 
#          steps:
#            - checkout
#            - run:
#                name: Build and Push CentOS Docker Image
#                command: |
#                  docker build -t my-centos-image .
#                  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#                  docker tag my-centos-image $DOCKER_USERNAME/my-centos-image
#                  docker push $DOCKER_USERNAME/my-centos-image
#
#      - deploy-approval:
#          <<: *master_only
#          name: 'Approval Gate For Centos'
#          type: approval
#          requires:
#            - docker-build-centos
#
#  build-debian:
#    when: 
#      or: 
#        - << pipeline.parameters.trigger-debian >>
#    jobs:
#      - docker-build-debian:
#          <<: *master_only
# 
#          steps:
#            - checkout
#            - run:
#                name: Build and Push Debian Docker Image
#                command: |
#                  docker build -t my-debian-image .
#                  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#                  docker tag my-debian-image $DOCKER_USERNAME/my-debian-image
#                  docker push $DOCKER_USERNAME/my-debian-image
#
#      - deploy-approval:
#          <<: *master_only
#          name: 'Approval Gate For Debian'
#          type: approval
#          requires:
#            - docker-build-debian
#
#  build-ubuntu:
#    when: 
#      or: 
#        - << pipeline.parameters.trigger-ubuntu >>
#    jobs:
#      - docker-build-ubuntu:
#          <<: *master_only
# 
#          steps:
#            - checkout
#            - run:
#                name: Build and Push Ubuntu Docker Image
#                command: |
#                  docker build -t my-ubuntu-image .
#                  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#                  docker tag my-ubuntu-image $DOCKER_USERNAME/my-ubuntu-image
#                  docker push $DOCKER_USERNAME/my-ubuntu-image
#
#      - deploy-approval:
#          <<: *master_only
#          name: 'Approval Gate For Ubuntu'
#          type: approval
#          requires:
#            - docker-build-ubuntu
#