version: 2.1

master_only: &master_only
  filters:
    branches:
      only: master

# PARAMETERS
parameters:
  trigger-alpine:
    type: boolean
    default: false
  trigger-centos:
    type: boolean
    default: false
  trigger-debian:
    type: boolean
    default: false
  trigger-ubuntu:
    type: boolean
    default: false
  alpine-path:
    type: string
    default: /root/project/os/alpine
  centos-path:
    type: string
    default: /root/project/os/centos
  debian-path:
    type: string
    default: /root/project/os/debian
  ubuntu-path:
    type: string
    default: /root/project/os/ubuntu

executors:
  docker-publisher:
    environment:
      URI: url
      IMAGE_TAG: latest
    docker:
      - image: docker:stable # docker:19.03.12 # Image must be having Docker in Docker in order to build all

commands:
  docker-build:
    parameters:
      version:
        default: "latest"
        type: string
      path:
        default: "os/alpine"
        type: string
      image_os:
        default: "alpine"
        type: string
    steps:
      - run:
          name: Build Docker Image
          command: | 
            docker build -t <<parameters.image_os>>:<<parameters.version>>  -f <<parameters.path>>/Dockerfile .
      - run:
          name: Tag Docker Image
          command: |
            docker tag <<parameters.image_os>>:<<parameters.version>> docker.pkg.github.com/nickkostov/dockerfiles/<<parameters.image_os>>:latest
      - run:
          name: Archive Docker image <<parameters.image_os>>:<<parameters.version>>
          command: docker save --output <<parameters.image_os>>_<<parameters.version>>.tar "<<parameters.image_os>>:<<parameters.version>>"
      - persist_to_workspace:
          root: .
          paths:
            - <<parameters.image_os>>_<<parameters.version>>.tar
  docker-push:
    parameters:
      version:
        default: "latest"
        type: string
      path:
        default: "os/alpine"
        type: string
      image_os:
        default: "alpine"
        type: string
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Docker image
          command: docker load --input /tmp/workspace/<<parameters.image_os>>_<<parameters.version>>.tar
#      - run:
#          name: Publish Docker image
#          command: |
#            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
#            docker push "${IMAGE_TAG}"

jobs:
  docker-build:
    executor: docker-publisher
#    resource_class: xlarge
    parameters:
      version:
        default: "latest"
        type: string
      path:
        default: "os/alpine"
        type: string
      image_os:
        default: "alpine"
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - docker-build:
          version: <<parameters.version>>
          path: <<parameters.path>>
          image_os: <<parameters.image_os>>
  docker-push:
    parameters:
      version:
        default: "latest"
        type: string
      path:
        default: "os/alpine"
        type: string
      image_os:
        default: "alpine"
        type: string
    executor: docker-publisher
    steps:
      - setup_remote_docker
      - docker-push
#  push:
#    executor: docker-publisher
#    steps:
#      - setup_remote_docker
#      - attach_workspace:
#          at: /tmp/workspace
#      - run:
#          name: Load Docker image
#          command: docker load --input /tmp/workspace/image.tar
#      - run:
#          name: Publish Docker image
#          command: |
#            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
#            docker push "${IMAGE_TAG}"
# WORKFLOWS
workflows:
  build-alpine:
    when: 
      or: 
        - << pipeline.parameters.trigger-alpine >>
    jobs:
      - docker-build:
          <<: *master_only
          version: "latest"
          path: "os/alpine"
          image_os: "alpine"
      - deploy-approval:
          <<: *master_only
          name: 'Approval Gate'
          type: approval
          requires:
            - docker-build
      - docker-push:
          <<: *master_only
          version: "latest"
          path: "os/alpine"
          image_os: "alpine"
          requires:
            - push-approval

  build-centos:
    when:
      or:
        - << pipeline.parameters.trigger-centos >>
    jobs:
      - docker-build:
          version: "latest"
          path: "os/centos"
          image_os: "centos"
          <<: *master_only
# Approval Gate
      - push-approval:
          <<: *master_only
          name: 'Approval Gate'
          type: approval
          requires:
            - docker-build
      - docker-push:
          <<: *master_only
          version: "latest"
          path: "os/centos"
          image_os: "centos"
          requires:
            - push-approval

  build-debian:
    when: 
      or: 
        - << pipeline.parameters.trigger-debian >>
    jobs:
      - docker-build:
          version: "latest"
          path: "os/debian"
          image_os: "debian"
          <<: *master_only
      - deploy-approval:
          <<: *master_only
          name: 'Approval Gate'
          type: approval
          requires:
            - docker-build
      - docker-push:
          version: "latest"
          path: "os/debian"
          image_os: "debian"
          <<: *master_only
  build-ubuntu:
    when: 
      or: 
        - << pipeline.parameters.trigger-ubuntu >>
    jobs:
      - docker-build:
          version: "latest"
          path: "os/ubuntu"
          image_os: "ubuntu"
          <<: *master_only
      - deploy-approval:
          <<: *master_only
          name: 'Approval Gate'
          type: approval
          requires:
            - docker-build
      - docker-push:
          version: "latest"
          path: "os/ubuntu"
          image_os: "ubuntu"
          <<: *master_only